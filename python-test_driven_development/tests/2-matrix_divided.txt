>>> from importlib import import_module
>>> import math
>>> matrix_divided = import_module('2-matrix_divided').matrix_divided

>>> matrix = [[3]]
>>> matrix_divided(matrix, 3)
[[1.0]]

>>> matrix = [[3, 9], [12, 15]]
>>> matrix_divided(matrix, -3)
[[-1.0, -3.0], [-4.0, -5.0]]

>>> matrix = [[3, 9], [12, 15]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix = [[3, 9], [12, 15]]
>>> matrix_divided(matrix, 'a')
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix = [3, 9]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[3, 9], [12, 15, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[3, "9"], [15, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[float('inf')]]
>>> result = matrix_divided(matrix, 1)
>>> result
[[inf]]

>>> matrix = [[float('nan')]]
>>> result = matrix_divided(matrix, 1)
>>> math.isnan(result[0][0])
True

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1]], 1, 1)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> matrix = [[1, 2], [3, 4]]
>>> result = matrix_divided(matrix, float('inf'))
>>> result
[[0.0, 0.0], [0.0, 0.0]]
