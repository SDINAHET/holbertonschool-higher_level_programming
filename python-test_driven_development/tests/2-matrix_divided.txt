>>> from 2-matrix_divided import matrix_divided
>>> matrix = [
...     [10, 20, 30],
...     [40, 50, 60]
... ]
>>> matrix_divided(matrix, 2)
[[5.0, 10.0, 15.0], [20.0, 25.0, 30.0]]

>>> matrix = [
...     [1, 2],
...     [3, 4]
... ]
>>> matrix_divided(matrix, 1)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix = [
...     [9, 18],
...     [27, 36]
... ]
>>> matrix_divided(matrix, 3)
[[3.0, 6.0], [9.0, 12.0]]

>>> matrix = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix = [
...     [1, 2, 3],
...     [4, '5', 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = 'not a matrix'
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 'a')
Traceback (most recent call last):
    ...
TypeError: div must be a number
